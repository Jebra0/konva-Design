{
  "version": 3,
  "sources": ["../../vuetify/src/labs/VNumberInput/VNumberInput.tsx"],
  "sourcesContent": ["// Styles\nimport './VNumberInput.sass'\n\n// Components\nimport { VBtn } from '../../components/VBtn'\nimport { VDefaultsProvider } from '../../components/VDefaultsProvider'\nimport { VDivider } from '../../components/VDivider'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\n\n// Composables\nimport { useForm } from '@/composables/form'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, watchEffect } from 'vue'\nimport { clamp, genericComponent, getDecimals, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VTextFieldSlots } from '@/components/VTextField/VTextField'\n\ntype ControlSlot = {\n  click: (e: MouseEvent) => void\n}\n\ntype VNumberInputSlots = Omit<VTextFieldSlots, 'default'> & {\n  increment: ControlSlot\n  decrement: ControlSlot\n}\n\ntype ControlVariant = 'default' | 'stacked' | 'split'\n\nconst makeVNumberInputProps = propsFactory({\n  controlVariant: {\n    type: String as PropType<ControlVariant>,\n    default: 'default',\n  },\n  inset: Boolean,\n  hideInput: Boolean,\n  min: {\n    type: Number,\n    default: -Infinity,\n  },\n  max: {\n    type: Number,\n    default: Infinity,\n  },\n  step: {\n    type: Number,\n    default: 1,\n  },\n\n  ...omit(makeVTextFieldProps(), ['appendInnerIcon', 'prependInnerIcon']),\n}, 'VNumberInput')\n\nexport const VNumberInput = genericComponent<VNumberInputSlots>()({\n  name: 'VNumberInput',\n\n  props: {\n    ...makeVNumberInputProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: number) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n\n    const stepDecimals = computed(() => getDecimals(props.step))\n    const modelDecimals = computed(() => model.value != null ? getDecimals(model.value) : 0)\n\n    const form = useForm()\n    const controlsDisabled = computed(() => (\n      props.disabled || props.readonly || form?.isReadonly.value\n    ))\n\n    const canIncrease = computed(() => {\n      if (controlsDisabled.value) return false\n      if (model.value == null) return true\n      return model.value + props.step <= props.max\n    })\n    const canDecrease = computed(() => {\n      if (controlsDisabled.value) return false\n      if (model.value == null) return true\n      return model.value - props.step >= props.min\n    })\n\n    watchEffect(() => {\n      if (controlsDisabled.value) return\n      if (model.value != null && (model.value < props.min || model.value > props.max)) {\n        model.value = clamp(model.value, props.min, props.max)\n      }\n    })\n\n    const controlVariant = computed(() => {\n      return props.hideInput ? 'stacked' : props.controlVariant\n    })\n\n    const incrementIcon = computed(() => controlVariant.value === 'split' ? '$plus' : '$collapse')\n    const decrementIcon = computed(() => controlVariant.value === 'split' ? '$minus' : '$expand')\n    const controlNodeSize = computed(() => controlVariant.value === 'split' ? 'default' : 'small')\n    const controlNodeDefaultHeight = computed(() => controlVariant.value === 'stacked' ? 'auto' : '100%')\n\n    const incrementSlotProps = computed(() => ({ click: onClickUp }))\n\n    const decrementSlotProps = computed(() => ({ click: onClickDown }))\n\n    function toggleUpDown (increment = true) {\n      if (controlsDisabled.value) return\n      if (model.value == null) {\n        model.value = 0\n        return\n      }\n\n      const decimals = Math.max(modelDecimals.value, stepDecimals.value)\n      if (increment) {\n        if (canIncrease.value) model.value = +(((model.value + props.step).toFixed(decimals)))\n      } else {\n        if (canDecrease.value) model.value = +(((model.value - props.step).toFixed(decimals)))\n      }\n    }\n\n    function onClickUp (e: MouseEvent) {\n      e.stopPropagation()\n      toggleUpDown()\n    }\n\n    function onClickDown (e: MouseEvent) {\n      e.stopPropagation()\n      toggleUpDown(false)\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (\n        ['Enter', 'ArrowLeft', 'ArrowRight', 'Backspace', 'Delete', 'Tab'].includes(e.key) ||\n        e.ctrlKey\n      ) return\n\n      if (['ArrowDown'].includes(e.key)) {\n        e.preventDefault()\n        toggleUpDown(false)\n        return\n      }\n      if (['ArrowUp'].includes(e.key)) {\n        e.preventDefault()\n        toggleUpDown()\n        return\n      }\n\n      // Only numbers, +, - & . are allowed\n      if (!/^[0-9\\-+.]+$/.test(e.key)) {\n        e.preventDefault()\n      }\n    }\n\n    function onModelUpdate (v: string) {\n      model.value = v ? +(v) : undefined\n    }\n\n    function onControlMousedown (e: MouseEvent) {\n      e.stopPropagation()\n    }\n\n    useRender(() => {\n      const { modelValue: _, ...textFieldProps } = VTextField.filterProps(props)\n\n      function incrementControlNode () {\n        return !slots.increment ? (\n          <VBtn\n            disabled={ !canIncrease.value }\n            flat\n            key=\"increment-btn\"\n            height={ controlNodeDefaultHeight.value }\n            name=\"increment-btn\"\n            icon={ incrementIcon.value }\n            onClick={ onClickUp }\n            onMousedown={ onControlMousedown }\n            size={ controlNodeSize.value }\n            tabindex=\"-1\"\n          />\n        ) : (\n          <VDefaultsProvider\n            key=\"increment-defaults\"\n            defaults={{\n              VBtn: {\n                disabled: !canIncrease.value,\n                flat: true,\n                height: controlNodeDefaultHeight.value,\n                size: controlNodeSize.value,\n                icon: incrementIcon.value,\n              },\n            }}\n          >\n            { slots.increment(incrementSlotProps.value) }\n          </VDefaultsProvider>\n        )\n      }\n\n      function decrementControlNode () {\n        return !slots.decrement ? (\n          <VBtn\n            disabled={ !canDecrease.value }\n            flat\n            key=\"decrement-btn\"\n            height={ controlNodeDefaultHeight.value }\n            name=\"decrement-btn\"\n            icon={ decrementIcon.value }\n            size={ controlNodeSize.value }\n            tabindex=\"-1\"\n            onClick={ onClickDown }\n            onMousedown={ onControlMousedown }\n          />\n        ) : (\n          <VDefaultsProvider\n            key=\"decrement-defaults\"\n            defaults={{\n              VBtn: {\n                disabled: !canDecrease.value,\n                flat: true,\n                height: controlNodeDefaultHeight.value,\n                size: controlNodeSize.value,\n                icon: decrementIcon.value,\n              },\n            }}\n          >\n            { slots.decrement(decrementSlotProps.value) }\n          </VDefaultsProvider>\n        )\n      }\n\n      function controlNode () {\n        return (\n          <div class=\"v-number-input__control\">\n            { decrementControlNode() }\n\n            <VDivider\n              vertical={ controlVariant.value !== 'stacked' }\n            />\n\n            { incrementControlNode() }\n          </div>\n        )\n      }\n\n      function dividerNode () {\n        return !props.hideInput && !props.inset ? <VDivider vertical /> : undefined\n      }\n\n      const appendInnerControl =\n        controlVariant.value === 'split'\n          ? (\n            <div class=\"v-number-input__control\">\n              <VDivider vertical />\n\n              { incrementControlNode() }\n            </div>\n          ) : (!props.reverse\n            ? <>{ dividerNode() }{ controlNode() }</>\n            : undefined)\n\n      const hasAppendInner = slots['append-inner'] || appendInnerControl\n\n      const prependInnerControl =\n        controlVariant.value === 'split'\n          ? (\n            <div class=\"v-number-input__control\">\n              { decrementControlNode() }\n\n              <VDivider vertical />\n            </div>\n          ) : (props.reverse\n            ? <>{ controlNode() }{ dividerNode() }</>\n            : undefined)\n\n      const hasPrependInner = slots['prepend-inner'] || prependInnerControl\n\n      return (\n        <VTextField\n          modelValue={ model.value }\n          onUpdate:modelValue={ onModelUpdate }\n          onKeydown={ onKeydown }\n          class={[\n            'v-number-input',\n            {\n              'v-number-input--default': controlVariant.value === 'default',\n              'v-number-input--hide-input': props.hideInput,\n              'v-number-input--inset': props.inset,\n              'v-number-input--reverse': props.reverse,\n              'v-number-input--split': controlVariant.value === 'split',\n              'v-number-input--stacked': controlVariant.value === 'stacked',\n            },\n            props.class,\n          ]}\n          { ...textFieldProps }\n          style={ props.style }\n          inputmode=\"decimal\"\n        >\n          {{\n            ...slots,\n            'append-inner': hasAppendInner ? (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { appendInnerControl }\n              </>\n            ) : undefined,\n            'prepend-inner': hasPrependInner ? (...args) => (\n              <>\n                { prependInnerControl }\n                { slots['prepend-inner']?.(...args) }\n              </>\n            ) : undefined,\n          }}\n        </VTextField>\n      )\n    })\n  },\n})\n\nexport type VNumberInput = InstanceType<typeof VNumberInput>\n"],
  "mappings": "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",
  "names": ["makeVNumberInputProps", "propsFactory", "controlVariant", "type", "String", "default", "inset", "Boolean", "hideInput", "min", "Number", "max", "Infinity", "step", "omit", "makeVTextFieldProps", "VNumberInput", "genericComponent", "name", "props", "emits", "val", "setup", "_ref", "attrs", "emit", "slots", "model", "useProxiedModel", "stepDecimals", "computed", "getDecimals", "modelDecimals", "value", "form", "useForm", "controlsDisabled", "disabled", "readonly", "isReadonly", "canIncrease", "canDecrease", "watchEffect", "clamp", "incrementIcon", "decrementIcon", "controlNodeSize", "controlNodeDefaultHeight", "incrementSlotProps", "click", "onClickUp", "decrementSlotProps", "onClickDown", "toggleUpDown", "increment", "arguments", "length", "undefined", "decimals", "Math", "toFixed", "e", "stopPropagation", "onKeydown", "includes", "key", "ctrlKey", "preventDefault", "test", "onModelUpdate", "v", "onControlMousedown", "useRender", "modelValue", "_", "textFieldProps", "VTextField", "filterProps", "incrementControlNode", "_createVNode", "VBtn", "VDefaultsProvider", "flat", "height", "size", "icon", "decrementControlNode", "decrement", "controlNode", "VDivider", "dividerNode", "appendInnerControl", "reverse", "_Fragment", "hasAppendInner", "prependInnerControl", "hasPrependInner", "_mergeProps", "class", "style", "_len", "args", "Array", "_key", "_len2", "_key2"]
}
